{"code":"!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){(function(t){var e=i(0);for(k in e)t[k]=e[k]}).call(this,i(5))},function(t,e,i){i(2);let s=document.getElementById(\"inputFile\");var n=i(0);s.addEventListener(\"change\",(function(){var t=new FileReader,e=s.files[0];if(0!==e.length){s.value;t.readAsText(e),t.onload=function(){let e=t.result;o.write(e),o.on(\"data\",(function(){console.log(\"Send file -- Success\"),o.destroy()})),o.on(\"close\",(function(){console.log(\"Connection closed\")}))}}}));var o=new n.Socket;o.connect(1337,\"127.0.0.1\",(function(){console.log(\"Connected\")}));var r=document.querySelectorAll(\".inputFile\");Array.prototype.forEach.call(r,(function(t){var e=t.nextElementSibling,i=e.innerHTML;t.addEventListener(\"change\",(function(t){var s=\"\";(s=this.files&&this.files.length>1?(this.getAttribute(\"data-multiple-caption\")||\"\").replace(\"{count}\",this.files.length):t.target.value.split(\"\\\\\").pop())?e.querySelector(\"span\").innerHTML=s:e.innerHTML=i}))}))},function(t,e,i){const s=i(3);t.exports.setSourceCode=function(t,e){switch(console.log(t),t.split(\".\")[1]){case\"cpp\":case\"c\":{let t=new s;t.print(),t.parseToJSON(e.replace(/{/g,\"\\n{\\n\").replace(/}/g,\"\\n}\\n\").split(\"\\n\"));break}}}},function(t,e,i){const s=i(4);t.exports=class extends s{constructor(){super(),console.log(this.basicOperation.DataType),this.JSON_code.Type=\"C/C++\",this.basicOperation.DataType.push(\"int\",\"float\",\"double\",\"boolean\",\"byte\",\"char\",\"long\"),this.basicOperation.InputOutput.push(\"printf\",\"scanf\",\"cin\",\"cout\"),this.basicOperation.ConditionalOperation.push(\"if\",\"else\"),this.basicOperation.DefineSubSystem={start:\"{\",end:\"}\"},this.basicOperation.Loop.push(\"for\",\"while\")}parseToJSON(t){super.parseToJSON(t)}print(t){super.print()}}},function(t,e){t.exports=class{constructor(){this.JSON_code={Name:\"TestCode\"},this.JSON_code.Type=\"\",this.subSystems={},this.subSystemIndex=-1,this.basicOperation={},this.basicOperation.DataType=[],this.basicOperation.InputOutput=[],this.basicOperation.ConditionalOperation=[],this.basicOperation.DefineSubSystem={start:\"\",end:\"\"},this.basicOperation.Loop=[],this.setINTO_Operation={},this.setINTO_OperationIndex=-1,this.defineJSON_Structure()}defineJSON_Structure(){this.JSON_code.Code={},this.JSON_code.Code.Assign={},this.JSON_code.Code.SubSystem={}}defineSubSystemStructure(){this.subSystems[this.subSystemIndex]={},this.subSystems[this.subSystemIndex].Assign={},this.subSystems[this.subSystemIndex].InputOutput={},this.subSystems[this.subSystemIndex].ConditionalOperation={},this.subSystems[this.subSystemIndex].Set={},this.subSystems[this.subSystemIndex].Loop={}}parseToJSON(t){console.log(\"Parse to JSON\");let e=0;for(let i in t)this.defineSubSystem(i-e,t[i]),this.inputOutputData(i-e,t[i])||this.conditionalOperation(i-e,t[i])||this.defineLoops(i-e,t[i])||(t[i].includes(\"=\")?this.assignData(i-e,t[i]):e++);this.printJSON(this.JSON_code)}printJSON(t){let e=[\"SubSystem\",\"ConditionalOperation\",\"Loop\"];for(let i in t){console.log(i),console.log(t[i]);for(let s=0;s<e.length;s++)if(\"object\"==typeof t[i]&&0!==t[i].length&&(e[s]in t[i]||i==e[s])){console.log(\"\\n___________________________________\\n\\t\"+e[s]+\"\\n===================================\\n\"),this.printJSON(t[i]);break}}}assignData(t,e){for(let i in this.basicOperation.DataType)if(e.includes(this.basicOperation.DataType[i]))return e=e.split(this.basicOperation.DataType[i]).join(\"\").replace(/[; ]/g,\"\").split(\"=\"),void(-1!=this.subSystemIndex?this.subSystems[this.subSystemIndex].Assign[t]=e:this.JSON_code.Code.Assign[t]=e);this.setData(t,e)}setData(t,e){return e=e.replace(/[; ]/g,\"\").split(\"=\"),this.subSystems[this.subSystemIndex].Set[t]=e,!1}inputOutputData(t,e){for(let i in this.basicOperation.InputOutput)if(e.includes(this.basicOperation.InputOutput[i]))return e=e.split(this.basicOperation.InputOutput[i]).join(\"\").replace(/[)(\"'`;]/g,\"\").split(\"  \").join(\"\"),this.subSystems[this.subSystemIndex].InputOutput[t]=e,!0;return!1}conditionalOperation(t,e){for(let i in this.basicOperation.ConditionalOperation)if(e.includes(this.basicOperation.ConditionalOperation[i]))return e=e.split(this.basicOperation.ConditionalOperation[i]).join(\"\").replace(/[() ]/g,\"\"),this.subSystems[this.subSystemIndex].ConditionalOperation[t]={Value:e},this.setINTO_Operation[++this.setINTO_OperationIndex]={Index:t,Operation:\"ConditionalOperation\"},!0;return!1}defineLoops(t,e){for(let i in this.basicOperation.Loop)if(e.includes(this.basicOperation.Loop[i]))return e=e.split(this.basicOperation.Loop[i]).join(\"\").replace(/[()]/g,\"\").split(\"  \").join(\"\"),this.subSystems[this.subSystemIndex].Loop[t]={Operation:this.basicOperation.Loop[i],Value:e},this.setINTO_Operation[++this.setINTO_OperationIndex]={Index:t,Operation:\"Loop\"},console.log(e),!0;return!1}defineSubSystem(t,e){e.includes(this.basicOperation.DefineSubSystem.start)&&(this.subSystemIndex++,this.defineSubSystemStructure()),e.includes(this.basicOperation.DefineSubSystem.end)&&(this.subSystemIndex--,-1!=this.setINTO_OperationIndex&&(this.subSystems[this.subSystemIndex][this.setINTO_Operation[this.setINTO_OperationIndex].Operation][this.setINTO_Operation[this.setINTO_OperationIndex--].Index].SubSystem=this.clone(this.subSystems[this.subSystemIndex+1])),-1==this.subSystemIndex&&(this.JSON_code.Code.SubSystem=this.clone(this.subSystems[0])))}clone(t){let e={};for(let i in t)e[i]=Object.assign({},t[i]);return e}print(t){console.log(\"Testing\\nDone!\")}}},function(t,e){var i;i=function(){return this}();try{i=i||new Function(\"return this\")()}catch(t){\"object\"==typeof window&&(i=window)}t.exports=i}]);","extractedComments":[]}